@import url('https://fonts.googleapis.com/css?family=Baloo');

body {
    /* Remove the default padding around the edge of the screen. */
    margin: 0;
    padding: 0;

    /* Make sure scroll bars never show up, and the game is always full-screen. */
    overflow: hidden;

    font-family: 'Baloo', sans-serif;

    background-color: #0d879f;
    background: linear-gradient(141deg, #186a9e 0%, #0d879f 51%, #00ada0 75%);
}

#vue-root {
    width: 100vw;
    height: 100vh;
}

/* Styles for the side containers. */
/* =============================== */
#top-side {
    position: absolute;
    top: 0;

    flex-direction: row;
}

#right-side {
    position: absolute;
    right: 0;

    flex-direction: column;
}

#bottom-side {
    position: absolute;
    bottom: 0;

    flex-direction: row-reverse;
}

#left-side {
    position: absolute;
    left: 0;

    flex-direction: column-reverse;
}

.horizontal-side, .vertical-side {
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
}

.horizontal-side {
    width: 100%;
    height: auto;

    box-sizing: border-box;
    padding: 0 200px; /* Horizontal margins should match hippo head size. */
}

.vertical-side {
    height: 100%;
    width: auto;

    box-sizing: border-box;
    padding: 200px 0; /* Vertical margins should match hippo head size. */
}

.side-contents {
    width: 100%;
    height: 100%;
}

.hippo-head-root {
    /* Use relative positioning so that we can absolutely position children. */
    position: relative;

    /* We use flexbox to position the label on the outside and the hippo head on the inside. */
    display: flex;

    /*
     * Allow the hippo head container to expand, causing the hippos to space themselves evently
     * along their side of the screen.
     */
    flex-grow: 1;

    /*
     * Center hippo heads and name tags within their container divs. This ensures that the hippos stay
     * centered correctly as they enter and leave, since the size of the container grows/shrinks
     * during the transition.
     */
    justify-content: center;
    align-items: center;
}

/*
 * Specify a base size for the hippo head. This allows for the enter/exit transitions to
 * animate the hippo's size smoothly.
 */
.horizontal-side .hippo-head-root {
    width: 100px;
}

.vertical-side .hippo-head-root {
    height: 100px;
}

.head-image-root {
    position: relative;
}

.head {
    display: block;
    width: 100px;
}

.crown {
    width: 75px;

    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -60%);
}

.hippo-text {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 10px;
    padding: 0;

    width: 120px;
    white-space: nowrap;
    text-align: center;

    border-radius: 10px;

    background-color: white;
}

.hippo-text div {
    background-color: white;
    padding: 0px 5px;
    border-radius: 10px;
}

.hippo-text .name {
    font-size: 130%;
}

.hippo-text .score {
    font-size: 200%;
}

.poison-pill {
    position: absolute;

    width: 100px;
    height: 100px;
    border-radius: 50%;

    background-color: red;
    background-image: url("assets/skull.png");
    background-size: 60px;
    background-position: center;
    background-repeat: no-repeat;
}

#bonus-text-root {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#bonus-text {
    position: relative;

    font-size: 200%;
    white-space: nowrap;

    color: #eab24a;

    background-color: #09381f;
    border-radius: 10px;
    padding: 0 10px;
}

/* Top side styles. */
#top-side .hippo-head-root {
    flex-direction: column;
}

/* Right side styles. */
#right-side .hippo-head-root {
    flex-direction: row-reverse;
}

#right-side .head-image-root {
    transform: rotate(90deg);
}

/* Bottom side styles. */
#bottom-side .hippo-head-root {
    flex-direction: column-reverse;
}

#bottom-side .head-image-root {
    transform: rotate(180deg);
}

/* Left side styles. */
#left-side .hippo-head-root {
    flex-direction: row;
}

#left-side .head-image-root {
    transform: rotate(-90deg);
}

/* Things that go in the center of the screen. */
/* =========================================== */
.center-item {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    white-space: nowrap;
}

#island {
    max-width: 60vw;
    z-index: -1;
}

#island img {
    width: 100%;
}

#attract-message {
    width: 100%;
}

#site-address {
    font-size: 150%;
    color: #eab24a;
}

#nose-goes {
    font-size: 600%;
    color: #eab24a;
    text-shadow: 5px 5px #09381f;
}

#death-message {
    font-size: 250%;
    color: white;
    text-shadow: 5px 5px #09381f;
}

#death-message .name {
    color: #eab24a;
    font-size: 150%;
}

/* Enter and exit transition configurations. */
/* ========================================= */

.hippo-head-root {
    transition: all 1s;
}

/* Delay the leave animation for long enough for us to play the death animation. */
.hippo-leave-active {
    transition-delay: 3s;
}

.hippo-enter, .hippo-leave-to {
    opacity: 0;
    flex-grow: 0;
}

.horizontal-side .hippo-enter, .horizontal-side .hippo-leave-to {
    width: 0;
}

.vertical-side .hippo-enter, .vertical-side .hippo-leave-to {
    height: 0;
}

#top-side .hippo-enter, #top-side .hippo-leave-to {
    transform: translateY(-100%);
}

#right-side .hippo-enter, #right-side .hippo-leave-to {
    transform: translateX(100%);
}

#bottom-side .hippo-enter, #bottom-side .hippo-leave-to {
    transform: translateY(100%);
}

#left-side .hippo-enter, #left-side .hippo-leave-to {
    transform: translateX(-100%);
}

/* Poison pill animation configuration. */
/* ==================================== */
.poison-pill {
    transition: all 1s;
}

.poison-enter {
    transform: scale(5);
    opacity: 0;
}

/* Death message animation configuration. */
/* ====================================== */
.death-message-enter-active {
    transition: all 0.2s;
}

.death-message-enter {
    transform: translate(-50%, -50%) scale(2);
    opacity: 0;
}

/* Crown animation configuration. */
/* ============================== */

.crown-enter-active {
    transition: all 0.3s;
    transition-timing-function: ease-in;
}

.crown-enter {
    opacity: 0;
    transform: translate(-50%, -50%) scale(5);
}

.crown-leave-active {
    transition: all 1s;
}

.crown-leave-to {
    opacity: 0;
    transform: translate(-50%, 50%);
}

/* Bonus text animation configuration. */
/* =================================== */

.bonus-text-enter-active {
    transition: all 0.3s;
}

#bonus-text-root.bonus-text-enter {
    opacity: 0;
    transform: translate(-50%, -50%) rotate(180deg) scale(3);
}
